# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Add vagrant/lib to Ruby path
$:.unshift File.expand_path('../lib', __FILE__)

require 'vagrant_version'
require 'vagrant_verified_download'
require 'digabi_build_settings'


# From Tails:
if ENV['DIGABI_RAM_BUILD']
  mem_size = VM_MEMORY_FOR_RAM_BUILDS
else
  mem_size = VM_MEMORY_FOR_DISK_BUILDS
end
cpus = ENV['DIGABI_BUILD_CPUS']

if vagrant_old
  # FIXME, do we even need this?
  raise 'FIXME: Using Vagrant 1.x'
else
  Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    config.vm.box = "debian-jessie64"
    config.vm.box_url = "http://cdn.ypcs.fi/pub/vagrant-debian-jessie64.box"

    # TODO: If in dev environment, use <http://ci.local/pub/Debian-testing-amd64-netboot.box>

    # config.vm.network :forwarded_port, guest: 80, host: 8080
    # config.vm.network :private_network, ip: "192.168.33.10"
    # config.vm.network :public_network
    # config.ssh.forward_agent = true
    # config.vm.synced_folder "../data", "/vagrant_data"

    # config.vm.provider :virtualbox do |vb|
    #   # Don't boot with headless mode
    #   vb.gui = true
    #
    #   # Use VBoxManage to customize the VM. For example to change memory:
    #   vb.customize ["modifyvm", :id, "--memory", "1024"]
    # end
    #

    config.vm.provision "shell", inline: "sudo http_proxy='#{ENV['http_proxy']}' DEBIAN_MIRROR='#{ENV['DEBIAN_MIRROR']}' /vagrant/provision/setup-dos-builder"
    config.vm.synced_folder '../.git', '/digabi-os.git'

    config.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :id, '--memory', mem_size]
      vb.customize ['modifyvm', :id, '--cpus', cpus] unless cpus.nil?
      vb.customize ['modifyvm', :id, '--ioapic', 'on']
      vb.customize ['modifyvm', :id, '--nictype1', 'virtio']
    end
  end
end
